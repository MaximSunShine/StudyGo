package main

import (
	"fmt"
	"math"
	"sync"
)

func maxElem(time []int) int {
	max := time[0]
	for _, v := range time {
		if max < v {
			max = v
		}
	}
	return max
}

func minElem(time []int) int {
	min := time[0]
	for _, v := range time {
		if min > v {
			min = v
		}
	}
	return min
}

var step int32
var wg = new(sync.WaitGroup)

type Point struct {
	help       int
	point      int
	bin        bool
	coef       float64
	colTrips   int
	totalTrips int
}

func (p *Point) SetPoint(point int, time []int) {
	if !p.bin {
		if p.point != point {
			help := ColTrips(time, point)

			//atomic.AddInt32(&step, 1)
			if p.colTrips <= help && help < p.totalTrips || p.colTrips >= help && help >= p.totalTrips {
				p.colTrips = help
				p.point = point
				p.coef = float64(p.totalTrips) / float64(p.colTrips)
			} else {
				p.help = point
				p.bin = true
			}
		}
	}
}
func (p *Point) GenerateNextPoint(time []int) *Point {
	var x = int(float64(p.point) * p.coef) //
	p.SetPoint(x, time)
	return p
}
func Binary(a, b int, time []int, totalTrips int) int {
	for a < b {
		help := a + (b-a)/3 //(a + b) / 2
		if ColTrips(time, help) < totalTrips {
			a = help + 1
		} else {
			b = help
		}
		//atomic.AddInt32(&step, 1)
	}
	return a
}

func Sum(a []int, t int) int {
	var sum = 0
	for _, v := range a {
		if t >= v {
			sum += t / v
		}
	}
	return sum
}

func ColTrips(time []int, t int) int {
	var colTrips int = 0
	wg := new(sync.WaitGroup)
	ch := make(chan int)
	for i := 0; i < len(time); i = i + 100 {
		wg.Add(1)
		if len(time)-i > 100 {
			go func(i int) {
				defer wg.Done()
				ch <- Sum(time[i:i+100], t)
			}(i)
		} else {
			go func(i int) {
				defer wg.Done()
				ch <- Sum(time[i:len(time)], t)
			}(i)
		}
	}
	go func() {
		wg.Wait()
		close(ch)
	}()
	for v := range ch {
		colTrips += v
	}

	return colTrips
}

func findMin(a *int, p *Point, time []int, wg *sync.WaitGroup) {
	defer wg.Done()
	for *a < p.GenerateNextPoint(time).point {
		*a = p.point
	}
}

func findMax(b *int, p *Point, time []int, wg *sync.WaitGroup) {
	defer wg.Done()
	for *b > p.GenerateNextPoint(time).point {
		*b = p.point
	}
}

func minimumTime2(time []int, totalTrips int) int64 {
	var velocitySum float64 = 0.0
	for _, i := range time {
		velocitySum += 1.0 / float64(i)
	}
	var min, max Point = Point{totalTrips: totalTrips, bin: false}, Point{totalTrips: totalTrips, bin: false, colTrips: math.MaxInt}

	t := float64(totalTrips) / velocitySum
	x := math.Floor(t)
	if t > x {
		x++
	}
	wg1 := new(sync.WaitGroup)
	wg1.Add(2)
	go func() {
		defer wg1.Done()
		min.SetPoint(int(x), time)
	}()
	go func() {
		defer wg1.Done()
		max.SetPoint(int(math.Floor(float64(totalTrips+len(time))/velocitySum)), time)
	}()
	wg1.Wait()
	a, b := 0, max.point
	if min.point < max.point {
		wg := new(sync.WaitGroup)
		wg.Add(2)
		go findMin(&a, &min, time, wg)
		go findMax(&b, &max, time, wg)
		wg.Wait()
		if min.point < max.help {
			min.point = max.help
		}
		if max.point > min.help && min.help != 0 {
			max.point = min.help
		}
		if min.point < max.point {
			a = Binary(a, b, time, totalTrips)
		}

	}
	return int64(a)
}

func minimumTime(time []int, totalTrips int) int64 {
	var velocitySum float64 = 0.0
	for _, i := range time {
		velocitySum += 1.0 / float64(i)
	}

	var min, max int

	t := float64(totalTrips) / velocitySum
	x := math.Floor(t)
	if t > x {
		min = int(x + 1)
	} else {
		min = int(x)
	}

	max = int(math.Floor(float64(totalTrips+len(time)) / velocitySum))
	maxColTrip := ColTrips(time, max)
	step++
	current := max
	help := 0
	var coef float64
	bin := false

	for min < max {
		if bin {
			bin = true
			help = min + (max-min)/3 // (max + min)/2
			maxColTrip = ColTrips(time, help)
		} else {
			if totalTrips != maxColTrip {
				coef = float64(totalTrips) / float64(maxColTrip)
			}
			help = int(float64(current) * coef)
			maxColTrip = ColTrips(time, help)
		}

		if maxColTrip >= totalTrips {
			if max > help {
				current, max = help, help
			} else {
				bin = true
			}
		} else {
			if min <= help {
				current, min = help+1, help+1
			} else {
				bin = true
			}
		}
		step++
	}
	return int64(max)
}

/*		if help < max {
			if maxColTrip >= totalTrips {
				current, max = help, help
			} else {
				current, min = help, help
			}
		} else {
			break
		}
	} else {
		help := int(float64(current) * coef)
		maxColTrip = ColTrips(time, help)
		if help > min {
			if maxColTrip < totalTrips {
				current, min = help, help
			} else {
				current, max = help, help

			}
		} else {
			break
		}
	}

	step++
}

for min != max {
	step++
	mid := max - (max-min+2)/3
	current = ColTrips(time, mid)
	if current < totalTrips {
		min = mid + 1
	} else {
		max = mid
	}
}
*/

func minimumTime3(time []int, totalTrips int) int64 {
	var velocitySum float64 = 0.0
	for _, i := range time {
		velocitySum += 1.0 / float64(i)
	}

	var start, end int64

	t := float64(totalTrips) / velocitySum
	x := math.Floor(t)
	if t > x {
		start = int64(math.Floor(t) + 1)
	} else {
		start = int64(math.Floor(t))
	}

	end = int64(math.Floor(float64(totalTrips+len(time)) / velocitySum))

	colTripsMin := ColTrips(time, int(start))
	colTripsMax := ColTrips(time, int(end))

	coefMin := float64(totalTrips) / float64(colTripsMin)
	coefMax := float64(totalTrips) / float64(colTripsMax)

	start = int64(float64(start) * coefMin)
	end = int64(float64(end) * coefMax)

	colTripsMin = ColTrips(time, int(start))
	colTripsMax = ColTrips(time, int(end))

	coefMin = float64(totalTrips) / float64(colTripsMin)
	coefMax = float64(totalTrips) / float64(colTripsMax)

	coefMin, coefMax = 3-coefMax-coefMin, 2*coefMax+coefMin-2

	start = int64(float64(start) * coefMin)
	end = int64(float64(end) * coefMax)

	//fmt.Println(coefMin, coefMax)

	for start < end {
		//step++
		mid := (start + end) / 2
		if more(time, mid, totalTrips) {
			end = mid
		} else {
			start = mid + 1
		}
	}

	return end
}

func minimumTime1(time []int, totalTrips int) int64 {
	var velocitySum float64 = 0.0
	for _, i := range time {
		velocitySum += 1.0 / float64(i)
	}

	var start, end int64

	t := float64(totalTrips) / velocitySum
	x := math.Floor(t)
	if t > x {
		start = int64(math.Floor(t) + 1)
	} else {
		start = int64(math.Floor(t))
	}

	end = int64(math.Floor(float64(totalTrips+len(time)) / velocitySum))

	for start < end {
		//step++
		mid := (start + end) / 2
		if more(time, mid, totalTrips) {
			end = mid
		} else {
			start = mid + 1
		}
	}

	return end
}

func more(time []int, t int64, totalTrips int) bool {
	var n int64 = 0

	for _, i := range time {
		n += t / int64(i)
		if n >= int64(totalTrips) {
			return true
		}
	}

	return false
}

func main() {

	var time = []int{35526, 68271, 53295, 85312, 98439, 20401, 12567, 75537, 13042, 3015, 17945, 51706, 8379, 9020, 68149, 90591, 69251, 9417, 78418, 35804, 36630, 93100, 14223, 27099, 65124, 38701, 93629, 82300, 78404, 72046, 35760, 11057, 60001, 55960, 96428, 49527, 87398, 89804, 45956, 46031, 48904, 35592, 66810, 2777, 75831, 753, 82438, 19950, 57812, 24402, 51134, 20588, 25909, 80046, 36073, 71308, 94062, 89630, 18090, 93549, 23207, 66416, 54285, 76663, 66441, 79464, 67201, 93574, 61759, 54469, 42206, 15010, 17893, 61618, 27951, 90361, 86666, 82842, 43701, 21837, 56027, 53768, 53220, 56636, 73170, 13353, 22393, 44370, 46178, 39523, 86692, 60228, 37866, 38409, 844, 36175, 62823, 40866, 71862, 19182, 73662, 11399, 26141, 57640, 19902, 40962, 25361, 58833, 51163, 35488, 5561, 54750, 84308, 64353, 64150, 17552, 69778, 13564, 6011, 79167, 56980, 98308, 83980, 45116, 56028, 88225, 1824, 93699, 89442, 22404, 5868, 18700, 44476, 15869, 1583, 57636, 28371, 6270, 66188, 37726, 76939, 79238, 59320, 89811, 66535, 93128, 21053, 86603, 90383, 17679, 95629, 80276, 62367, 54714, 81017, 88434, 81240, 91915, 14418, 2251, 50001, 57081, 56030, 11941, 83308, 14990, 37527, 25793, 96967, 12902, 36597, 38487, 10090, 23757, 18301, 70951, 76172, 38409, 12228, 20382, 16560, 90106, 43687, 99248, 33738, 48726, 65936, 71531, 66629, 95433, 59822, 230, 13699, 21614, 48847, 3254, 9417, 28867, 38889, 64031, 57498, 83515, 71619, 95748, 86437, 40468, 40175, 1062, 94502, 96956, 240, 14265, 77888, 59298, 27311, 93953, 99919, 41606, 52803, 51401, 64132, 55876, 85391, 97101, 56438, 21074, 79997, 56815, 92097, 14090, 85007, 83914, 19222, 30752, 41580, 81193, 82585, 16509, 86366, 5654, 48942, 22998, 73761, 40595, 73144, 90131, 29770, 40487, 58407, 91217, 86723, 91291, 76943, 87736, 16745, 21252, 71347, 13605, 51863, 67662, 951, 42887, 34961, 71152, 83517, 14521, 63450, 49661, 72650, 31854, 38506, 14508, 1837, 99584, 73991, 19604, 174, 78776, 34463, 96369, 16743, 9341, 27944, 65679, 70077, 33227, 52684, 51832, 91464, 34239, 50175, 48925, 9918, 76944, 22485, 24469, 74612, 90584, 21380, 68789, 65552, 35330, 58725, 30035, 88445, 76097, 90479, 33509, 21790, 69282, 33720, 32661, 92204, 61463, 69033, 18774, 40028, 67322, 63697, 85469, 42726, 35207, 13436, 49118, 27075, 41241, 12212, 54741, 31899, 38764, 19239, 45927, 79779, 82559, 69922, 97988, 64077, 60899, 19250, 33197, 12227, 55129, 6161, 7679, 90383, 21720, 38419, 59921, 40394, 22248, 84651, 9919, 14769, 50547, 35590, 22054, 98547, 92300, 50533, 24494, 6357, 74340, 16444, 36562, 25519, 70299, 91085, 58473, 48549, 7314, 49789, 50854, 94732, 16473, 22298, 94573, 1177, 16647, 10489, 40756, 11864, 52532, 78056, 72466, 45909, 83358, 36728, 61145, 24085, 19232, 2698, 5866, 21763, 19417, 52766, 70604, 75357, 86363, 23548, 59612, 57256, 72080, 90665, 62130, 17811, 11737, 40209, 76143, 84341, 62105, 9559, 15885, 44428, 65942, 73923, 60174, 94085, 85226, 22423, 11680, 16007, 72223, 92611, 24143, 56415, 99004, 35300, 63534, 91796, 95364, 39871, 39547, 31533, 9820, 19254, 80757, 67351, 61252, 27802, 9134, 3264, 6660, 43279, 74234, 27708, 92078, 17050, 92833, 33868, 28116, 35816, 23129, 63684, 21393, 445, 6655, 50495, 45718, 86882, 71493, 7397, 16595, 77758, 80091, 780, 3783, 16168, 55390, 30565, 34707, 32019, 85772, 90904, 96641, 85382, 61320, 23459, 6965, 97895, 19435, 36616, 9787, 54886, 90036, 92125, 34729, 38960, 66245, 58496, 96129, 46772, 73733, 65067, 53184, 66181, 58382, 3922, 5387, 65890, 77429, 38183, 84541, 27072, 90736, 94570, 99936, 73272, 60375, 10952, 9332, 97636, 39694, 13399, 51220, 5018, 36268, 85523, 34753, 53991, 56651, 17209, 7006, 45423, 49624, 9709, 18987, 4592, 30361, 88433, 48024, 29942, 91592, 8239, 28732, 35824, 4946, 65484, 16979, 33142, 75656, 3209, 22468, 85755, 39194, 87907, 72594, 43707, 36876, 81362, 15459, 68075, 19741, 18928, 44027, 63719, 21262, 75445, 30250, 51196, 6219, 34048, 23502, 60665, 1631, 62306, 23264, 67398, 49274, 84972, 16739, 94834, 23334, 82672, 92166, 31032, 78520, 93931, 28044, 61781, 76557, 33376, 46480, 26749, 22509, 64281, 54589, 50426, 44636, 45225, 99895, 71585, 17673, 13409, 95493, 90636, 86268, 16980, 7514, 39203, 9907, 27569, 14822, 61552, 41838, 74638, 87542, 72644, 13042, 1869, 96037, 96075, 126, 74862, 40225, 59462, 42920, 58159, 34863, 72917, 85179, 48285, 19993, 84466, 7840, 5972, 54264, 43475, 92314, 4800, 19150, 69554, 56691, 19948, 27419, 59213, 66373, 44592, 46195, 82009, 78601, 17154, 27595, 95329, 36216, 91618, 71112, 10493, 57289, 30769, 54429, 1855, 13489, 74406, 57880, 3088, 92345, 10824, 87602, 94317, 95410, 79507, 89423, 60715, 37526, 53564, 98388, 48032, 35013, 60838, 99317, 30389, 69656, 32224, 70212, 53067, 31487, 77619, 32138, 56939, 25282, 66232, 54525, 51762, 86251, 15422, 96128, 59093, 39155, 91664, 95086, 64328, 58154, 16901, 57839, 36992, 59934, 61257, 5557, 15425, 57045, 12889, 69846, 29139, 61557, 83756, 32458, 90919, 52963, 14359, 49874, 80682, 84655, 65452, 55068, 43914, 76328, 45679, 35127, 72774, 62715, 91798, 29872, 81354, 80582, 96103, 28903, 50678, 9125, 45643, 11868, 9791, 46321, 41872, 7001, 92742, 89046, 77778, 58288, 57737, 28006,
		38887, 4145, 30995, 23181, 22663, 76976, 12037, 94311, 69665, 47087, 243, 85775, 33414, 14113, 25750, 68464, 27502, 33912, 49055, 86698, 68094, 7608, 70775, 62943, 42776, 34704, 11471, 4417, 99359, 60717, 71140, 87687, 24846, 22480, 56390, 47598, 28920, 1425, 78664, 65311, 25188, 69310, 46708, 56404, 79811, 22070, 75607, 32708, 1979, 67357, 81800, 28625, 58021, 29588, 49578, 16281, 18081, 74281, 57898, 39302, 18506, 70543, 41031, 35986, 1699, 96223, 41042, 13283, 50709, 61933, 91181, 46030, 61266, 66703, 82807, 89387, 67547, 6497, 55088, 61583, 42425, 91409, 85463, 8301, 78781, 80870, 98576, 55880, 33799, 9806, 31789, 1220, 49041, 40852, 98197, 88459, 80809, 30683, 45742, 53320, 25920, 65231, 56346, 207, 17794, 82843, 50215, 57, 47903, 10075, 62437, 2278, 98786, 98119, 45948, 30820, 29230, 1929, 76287, 79090, 85711, 72527, 92053, 26601, 48647, 76929, 14214, 44902, 76505, 40038, 64918, 60383, 35546, 2544, 40358, 86056, 60688, 18499, 88770, 22849, 63307, 51149, 60424, 47592, 43259, 26180, 16534, 49804, 23756, 9616, 13388, 64930, 99325, 39424, 70127, 92799, 91793, 28812, 71828, 14453, 91106, 666, 62810, 11290, 9647, 22966, 16230, 35343, 84054, 34513, 2255, 89433, 26782, 46009, 53791, 44813, 68657, 49581, 41018, 86354, 2203, 96565, 76773, 2292, 20466, 91806, 21150, 4547, 34076, 35288, 17350, 37117, 89318, 5010, 41980, 98619, 34277, 56047, 96091, 14986, 47946, 557, 12310, 45083, 33215, 41672, 76247, 22120, 98394, 52505, 32913, 13669, 79991, 50390, 84603, 96700, 45380, 83969, 62960, 922, 77322, 89247, 22082, 77155, 58180, 85090, 34045, 78015, 83134, 65175, 12575, 29973, 33374, 66596, 9773, 3090, 5978, 51347, 10092, 21711, 12959, 59636, 66040, 79673, 11149, 3982, 70175, 26604, 19115, 27400, 34364, 82326, 23104, 1413, 72067, 46839, 39644, 24885, 60701, 72571, 46163, 83030, 62798, 48657, 10336, 45398, 31463, 35149, 93705, 89614, 55496, 94724, 47644, 67168, 252, 67317, 90167, 73396, 79355, 42813, 69604, 60195, 31448, 38177, 8685, 3453, 27967, 34365, 20916, 31161, 32697, 13569, 56538, 97312, 43741, 20268, 62417, 8800, 58889, 887, 59083, 37770, 54497, 3483, 13208, 78264, 63926, 51702, 57788, 62339, 34878, 25061, 9272, 33436, 11559, 24844, 55273, 15700, 86056, 24847, 59543, 88362, 88930, 99160, 76001, 3727, 24347, 62899, 15058, 36773, 22921, 46114, 25650, 24349, 54426, 88951, 56929, 34112, 35932, 96915, 20056, 5065, 11710, 85022, 4786, 58819, 86765, 42917, 16629, 75041, 9382, 15583, 19171, 72488, 45448, 12527, 50008, 93346, 80955, 45643, 28915, 73390, 67806, 29676, 21950, 45132, 98400, 54683, 46952, 36276, 47913, 48498, 1003, 77209, 65162, 29328, 77900, 23452, 46557, 11635, 60276, 59815, 55051, 47365, 40098, 9110, 42438, 89515, 29366, 57827, 77546, 87805, 52271, 13786, 13027, 80350, 11753, 39876, 30041, 90876, 79402, 47918, 8267, 44250, 20405, 2429, 47678, 66426, 74651, 60939, 19540, 75226, 69460, 30180, 2743, 70832, 70474, 56895, 35632, 7563, 40387, 84892, 72994, 86326, 76410, 12579, 85154, 21588, 97138, 35456, 10816, 66345, 77797, 68559, 33827, 77916, 36264, 33517, 73029, 83578, 19096, 40231, 15099, 56610, 75386, 1213, 72113, 89289, 50868, 23025, 47995, 10864, 37206, 21100, 77996, 15471, 34319, 91648, 20577, 67231, 99970, 74615, 67606, 25690, 35923, 8601, 25104, 31088, 79805, 51973, 51920, 84434, 80312, 25120, 69047, 95483, 50715, 29121, 89649, 46749, 15222, 93612, 88422, 86352, 65066, 62750, 34466, 64722, 74346, 74135, 11801, 17645, 3812, 92193, 47185, 34855, 70969, 43411, 70828, 3418, 30992, 16477, 82597, 55609, 44222, 41623, 7218, 28642, 22624, 12312, 10349, 65818, 2864, 88496, 75385, 1598, 56445, 37344, 25697, 2769, 68254, 46395, 69019, 20250, 35393, 16111, 71962, 44468, 34732, 99529, 92395, 1285, 41002, 50225, 97701, 69150, 6999, 14127, 2882, 34898, 19302, 44052, 8041, 47837, 65291, 432, 46098, 8936, 28920, 67179, 54431, 81597, 56203, 18857, 65644, 66000, 87428, 47819, 22412, 99383, 69228, 86157, 14117, 95023, 86969, 74639, 58154, 4275, 52890, 5310, 70266, 52189, 37070, 90901, 25435, 60438, 67789, 21700, 82598, 95286, 97387, 79924, 44033, 5780, 47403, 72271, 65250, 39131, 22041, 98251, 60309, 57013, 1582, 84467, 1141, 21623, 85870, 21842, 59956, 31760, 89107, 68510, 15402, 49597, 57244, 51077, 73507, 92790, 33644, 79234, 31355, 91673, 35535, 86931, 62187, 13454, 66936, 57556, 90153, 7256, 19272, 36508, 16036, 44137, 87064, 47269, 91970, 20794, 3900, 55674, 49311, 39261, 84557, 75459, 97774, 16230, 91469, 37598, 17275, 62318, 1287, 88218, 69983, 56343, 52444, 6720, 58269, 36530, 79221, 14821, 35676, 19580, 97810, 13112, 60622, 94837, 44378, 3430, 61281, 81910, 42891, 51976, 76436, 57016, 11020, 4864, 8852, 31660, 17645, 46208, 82855, 56127,
		72673, 46038, 12074, 80563, 36165, 52039, 74661, 97768, 52559, 49274, 82208, 28035, 37180, 23005, 19487, 57510, 5296, 92608, 41737, 83942, 8223, 24798, 83768, 25029, 88857, 34888, 52171, 63133, 16939, 95122, 31264, 7006, 56696, 84238, 60986, 25622, 22973, 83335, 3681, 92009, 97206, 67773, 68873, 50397, 51845, 81226, 34, 39384, 19872, 14387, 29151, 9105, 86972, 20259, 22695, 99301, 50232, 29296, 9107, 4977, 49045, 9573, 25400, 3430, 1614, 39028, 51323, 45596, 95033, 96890, 30501, 88688, 66127, 99318, 44462, 92340, 9747, 11523, 12154, 69783, 91358, 57856, 13847, 34876, 82518, 39401, 33473, 71995, 98328, 14358, 23599, 42472, 37601, 3994, 46517, 25420, 68254, 15846, 34201, 31710, 26821, 58743, 36653, 43639, 40035, 24876, 87497, 77685, 53880, 3974, 70156, 56738, 54862, 57692, 24496, 78266, 93074, 85729, 90402, 62515, 42192, 71592, 50427, 95841, 47190, 56716, 90355, 48926, 37564, 85781, 98003, 17932, 1316, 47175, 13691, 21194, 59404, 17063, 31943, 57638, 31343, 10416, 32230, 48887, 48681, 57475, 6488, 2456, 43990, 14847, 71078, 90582, 15894, 14900, 607, 97226, 35692, 18656, 5661, 29793, 86919, 9172, 74191, 71616, 98707, 32106, 3270, 1638, 56606, 33251, 47674, 96531, 83026, 15337, 7690, 59357, 76286, 3004, 9482, 66018, 21242, 35495, 13893, 49569, 85876, 55793, 33537, 40872, 44376, 16546, 70122, 32100, 21875, 20678, 99865, 50303, 44668, 44693, 91958, 32585, 72362, 15100, 80982, 84922, 19799, 6281, 71324, 23553, 84000, 11537, 9987, 11989, 78728, 48801, 22431, 29136, 55355, 1210, 8810, 62511, 73092, 19364, 33795, 72116, 21347, 20963, 65833, 21516, 60259, 35150, 89862, 30110, 12255, 49310, 62911, 84699, 50812, 87484, 51140, 33180, 23721, 43102, 87331, 64485, 38692, 99280, 82267, 46525, 65494, 66608, 8576, 4325, 62705, 1264, 73176, 71662, 60603, 8940, 72042, 59565, 56845, 60963, 84186, 49349, 93269, 52952, 36143, 53723, 71740, 74724, 231, 22097, 38663, 9335, 43925, 2581, 62739, 98742, 42033, 79802, 79244, 90414, 16019, 45066, 39148, 60390, 30395, 97585, 2146, 83533, 33083, 21610, 49350, 52022, 11136, 80338, 37984, 48941, 1418, 15299, 83744, 77547, 23283, 17848, 15580, 96413, 90652, 55304, 80543, 90444, 39736, 25184, 97581, 83751, 2637, 31870, 36141, 56952, 30820, 53485, 39300, 86380, 83260, 5938, 8041, 31166, 81747, 90246, 59005, 17518, 37891, 76974, 55195, 12518, 76752, 26574, 65172, 91410, 65445, 25579, 92653, 6594, 60094, 9417, 12545, 59743, 62055, 98462, 9600, 29863, 67981, 67879, 46846, 7392, 98745, 70390, 4095, 5956, 36155, 68863, 90195, 95964, 77112, 28063, 90134, 52560, 93874, 49959, 42027, 9440, 34752, 52771, 19849, 87997, 87379, 63548, 59569, 52334, 62692, 5080, 40490, 91007, 48117, 37029, 94759, 77285, 39529, 1649, 76416, 5543, 10795, 92415, 34982, 93706, 21511, 34713, 39388, 93102, 26664, 72093, 91344, 48561, 65561, 15644, 4333, 88512, 69922, 628, 30835, 99378, 48424, 50653, 73012, 1566, 32326, 33500, 19250, 87475, 30050, 19891, 9056, 59796, 34813, 54197, 50608, 20856, 65886, 4488, 76521, 1152, 18755, 61160, 48431, 12204, 97447, 76459, 49690, 97698, 70421, 99048, 44070, 73817, 68521, 62422, 7982, 16182, 16317, 39559, 71648, 86796, 72009, 38687, 7436, 50020, 98498, 45169, 93147, 22197, 43132, 61129, 88097, 71996, 89492, 78939, 63460, 13205, 47621, 59854, 93737, 13692, 54880, 36641, 91097, 34018, 13116, 85272, 16665, 64136, 54215, 86626, 1344, 43285, 25293, 79496, 65273, 54408, 77274, 39154, 3993, 15335, 51165, 22634, 97282, 29729, 83357, 54438, 2147, 70104, 19345, 33103, 2427, 79886, 134, 25065, 88081, 27753, 35797, 65751, 54901, 20082, 15923, 92378, 43940, 52952, 41531, 80001, 94902, 95656, 36848, 67464, 42468, 9211, 80210, 37793, 15925, 42715, 13213, 79743, 17011, 61664, 43421, 33152, 3001, 8827, 46763, 10915, 28257, 4300, 74589, 89336, 31085, 57587, 24351, 73466, 43982, 5703, 22216, 49434, 67920, 81581, 8070, 46878, 53676, 89532, 84353, 49629, 5163, 86758, 67050, 77195, 45882, 4109, 57483, 28697, 55679, 5357, 8867, 10287, 62530, 31985, 46750, 84278, 40659, 87414, 98812, 31866, 61325, 37999, 72313, 59255, 73829, 85009, 94233, 86222, 88822, 39680, 51717, 3151, 66283, 17161, 54518, 7700, 7066, 64517, 6455, 38964, 55271, 75958, 28831, 13335, 78981, 74682, 93311, 137, 50773, 19372, 22942, 66193, 7933, 75421, 13298, 10190, 10491, 28390, 2349, 93218, 11645, 64538, 87658, 15518, 75241, 82168, 89629, 86670, 40543, 50129, 72279, 19581, 5069, 97366, 81016, 38763, 17769, 24571, 45101, 97465, 5993, 38154, 99649, 74567, 14153, 21776, 11101, 36717, 87277, 99884, 45629, 47067, 32780, 48605, 38675, 85488, 16652, 56868, 90644, 96598, 70106, 82602, 33629, 39929, 56605, 87478, 43391, 93309, 22052, 79389, 2886, 11742, 36552, 60021, 54743, 24589, 50454, 53864, 96536, 38350, 69221, 94679, 96750, 26718, 71884, 91060, 12596, 81109, 78873, 92336, 87173, 90842, 23954, 63750, 90190, 55545, 39966, 58230, 94228, 9983, 27601, 73590, 70753, 19505, 94838, 68347, 37238, 94375, 53468, 26863, 57021, 26752, 68456, 45976, 7388, 55056, 13700, 66683, 77694, 18425, 12599, 88877, 6592, 62482, 18514, 82483, 4059, 49734, 36353, 63711, 91839, 29652, 20495, 80155, 57275, 89396, 16259, 97239, 12774, 73692, 41461, 12599, 56618, 4314, 75868, 38425, 59913,
		48445, 11992, 54171, 61090, 77076, 22021, 90628, 592, 41149, 59668, 8392, 73326, 70286, 39969, 28559, 90760, 12728, 22485, 38024, 56805, 72248, 62374, 93814, 56603, 36766, 20483, 29108, 69899, 54716, 92157, 8007, 68409, 99130, 83088, 62064, 144, 57140, 91156, 44663, 74510, 28720, 28887, 95520, 33241, 13690, 51013, 66789, 91294, 39465, 95469, 49585, 50342, 16904, 56808, 53684, 18149, 21524, 32434, 7033, 59557, 18526, 95720, 80121, 53717, 65132, 53858, 3129, 64755, 24806, 70014, 94176, 80436, 71800, 30134, 33173, 46264, 26137, 75713, 28208, 10992, 77348, 72817, 40145, 26088, 21285, 73042, 66484, 15626, 21952, 76775, 42444, 6457, 63242, 11260, 54694, 93444, 51599, 80659, 71495, 59436, 91785, 73158, 67306, 76508, 91721, 78035, 54869, 94827, 4616, 66911, 35121, 79145, 3920, 27705, 6077, 5951, 22868, 95675, 31171, 46438, 16183, 90960, 28559, 12650, 89791, 5334, 56919, 44770, 17565, 53393, 11235, 99655, 22951, 59332, 78189, 47541, 50688, 7868, 20470, 66262, 81947, 75386, 26269, 8458, 86601, 31819, 74789, 45359, 59133, 16555, 25175, 97976, 4093, 82424, 17599, 8592, 44129, 47207, 98817, 3993, 81424, 72002, 14499, 99665, 27725, 74553, 30765, 80152, 55584, 93326, 96954, 30835, 15545, 8739, 20963, 79883, 3943, 22904, 53927, 20392, 28568, 36203, 24243, 13634, 30241, 74395, 32809, 96123, 64831, 87880, 65959, 20690, 72019, 1078, 1745, 27088, 88529, 48743, 72766, 9200, 20698, 37956, 32501, 21765, 5456, 57915, 85388, 6353, 48909, 12211, 66969, 35961, 271, 66357, 89455, 91880, 48750, 12829, 709, 61938, 25822, 94229, 28856, 93512, 59539, 98099, 17304, 77838, 44476, 53337, 34408, 13134, 52756, 2460, 82552, 3181, 79185, 14560, 53962, 20638, 91608, 16060, 83763, 80765, 71461, 77105, 1350, 62806, 533, 1827, 91473, 38048, 41104, 59689, 67601, 77280, 90046, 13874, 64463, 22874, 42209, 35901, 52004, 3017, 73522, 37798, 82560, 41431, 70841, 72906, 99966, 74204, 94450, 97093, 55200, 63605, 98097, 28731, 62612, 21753, 98228, 93483, 83959, 47443, 60507, 68952, 41553, 28238, 84748, 87948, 81648, 48497, 29304, 92993, 1250, 62819, 4916, 36340, 6264, 62861, 24981, 72707, 96637, 13477, 94568, 79662, 67125, 13883, 78906, 47303, 6845, 85236, 2548, 36519, 93614, 79204, 50412, 61959, 85700, 4800, 98600, 28456, 25639, 66786, 78043, 41685, 20649, 48024, 61669, 45861, 50920, 81257, 48988, 61927, 75672, 4597, 22160, 52118, 43704, 46602, 39978, 87993, 91268, 59623, 78492, 80452, 73226, 15673, 25000, 91346, 19411, 31593, 41439, 32458, 76626, 83509, 11734, 15172, 6204, 91101, 53806, 56872, 34644, 86140, 15379, 99041, 38954, 9485, 72746, 35802, 52522, 43861, 55246, 71723, 15138, 73953, 49241, 80268, 72534, 51332, 862, 56139, 29038, 95060, 87762, 3537, 36833, 95134, 43234, 21821, 50372, 19963, 14537, 7743, 99988, 19814, 10409, 46316, 94909, 82056, 34814, 76070, 14431, 19808, 9138, 10107, 72747, 76360, 64969, 72420, 57298, 73337, 1092, 50757, 82779, 82283, 81662, 60064, 44324, 97633, 18546, 86655, 13623, 29278, 18145, 77557, 55193, 97046, 16813, 46822, 17640, 24407, 1648, 27760, 46156, 36317, 9572, 33885, 17241, 31190, 72577, 74632, 34306, 13532, 82934, 17653, 90196, 17569, 1195, 94533, 1785, 14079, 53823, 36039, 38293, 10499, 25996, 17919, 17775, 82137, 61091, 87037, 54862, 14250, 86348, 66202, 29160, 6857, 82758, 74672, 31383, 66637, 36939, 4434, 78175, 51977, 94507, 49712, 77798, 20749, 12807, 7605, 27805, 35523, 46808, 93285, 18164, 82679, 94642, 54265, 42967, 14329, 60799, 37518, 89214, 24196, 46991, 2246, 10739, 49335, 63458, 21711, 70470, 37318, 10334, 31199, 20092, 25850, 98167, 93952, 19082, 92091, 94719, 62500, 11090, 64723, 56363, 39439, 64377, 70009, 61914, 94347, 98169, 28996, 32103, 22804, 78934, 939, 92408, 66888, 9870, 38777, 87901, 72488, 87911, 24955, 54019, 52939, 14843, 74475, 30004, 48451, 61505, 56924, 38228, 25740, 86307, 33182, 88115, 42208, 14926, 43483, 96176, 94678, 1372, 69037, 4418, 54696, 12865, 18591, 32249, 61284, 99269, 82537, 53923, 75171, 52963, 82016, 65938, 6070, 74983, 82844, 2031, 13023, 36900, 65176, 15851, 42420, 5611, 34357, 4229, 62968, 90842, 65618, 18943, 72826, 57326, 9398, 55950, 57246, 82142, 69845, 74193, 17392, 39558, 3894, 71351, 17800, 42863, 38226, 49762, 83380, 67348, 98797, 37393, 49419, 99379, 22110, 29993, 18580, 12621, 6540, 60437, 82793, 82963, 70567, 61916, 88170, 99020, 42100, 94015, 71494, 60055, 28177, 42828, 41783, 32945, 7178, 68743, 87574, 71950, 19679, 72667, 8794, 3496, 47204, 44998, 44424, 61927, 12982, 18249, 83032, 31449, 14831, 87554, 60444, 45411, 25603, 79296, 35933, 34591, 48091, 20148, 91927, 39965, 2035, 7913, 66837, 18925, 82814, 77992, 12197, 41227, 18476, 27648, 92569, 11478, 82879, 5618, 3434, 98822, 95399, 84697, 71575, 9661, 97451, 63312, 54273, 70919, 28565, 25086, 39626, 91069, 22646, 88443, 45339, 66406, 54488, 54367, 45993, 87062, 23033, 1536, 7085, 56507, 15017, 84041, 94867, 39256, 81530, 42457, 18235, 61187, 54792, 42708, 25221, 24433, 39207, 51027, 13787, 40006, 2537, 28987, 86268, 7351}

	//fmt.Println(ColTrips(time, 34766088))
	wg.Add(2)

	go func() {
		defer wg.Done()
		fmt.Println("2", minimumTime2(time, 9765277))
	}()

	go func() {
		defer wg.Done()
		fmt.Println("1", minimumTime(time, 9765277))
	}()
	wg.Wait()
	/*fmt.Println(minimumTime3(time, 9765277))
	time = []int{87, 85, 87, 12, 42, 44, 91, 7, 36, 58, 64, 33, 51, 73, 27, 100, 30, 80, 9, 22, 95, 58, 97, 6, 6, 96, 10, 59, 68, 24, 14, 79, 33, 66, 59, 98, 2, 61, 100, 70, 93, 17, 18, 5, 5, 100, 33, 64, 8, 18, 92, 40, 36, 87, 100, 29, 21, 15, 27, 3, 12, 70, 18, 7, 14, 74, 80, 99, 67, 8, 94, 61}
	fmt.Println(minimumTime3(time, 2847))

	time = []int{1, 2, 3}
	fmt.Println(minimumTime3(time, 5))

	time = []int{2}
	fmt.Println(minimumTime3(time, 1))

	time = []int{15432, 85713, 52737, 32251, 8541, 31578, 48862, 21692, 94894, 89291, 29503, 40796, 98680, 59261, 25269, 84333, 10675, 27368, 35270, 79890, 28609, 85496, 51953, 83268, 45619, 19058, 10180, 12473, 46412, 64791, 93120, 41636, 63739, 15499, 88286, 37395, 64173, 68398, 13467, 70033, 95271, 84424, 76710, 25656, 1684, 69599, 68832, 93451, 40674, 76892, 12753, 48469, 97911, 90189, 52417, 46430, 48880, 20911, 63574, 70850, 45191, 30076, 44880, 52247, 96387, 85804, 23308, 9945, 43153, 71282, 39708, 74682, 99397, 70111, 8415, 53817, 16019, 24479, 75998, 66366, 94679, 95983, 56588, 41302, 10258, 37940, 275, 82427, 59602, 39303, 57141, 41408, 33997, 85413, 26629, 21330, 62472, 61627, 38998, 8049, 96241, 17881, 8002, 84432, 28728, 72879, 62395, 85860, 22548, 88048, 6732, 42165, 28043, 9344, 79309, 63226, 37106, 65344, 40323, 24541, 91224, 37993, 41228, 33425, 16040, 37212, 48406, 41077, 62804, 54136, 1656, 8299, 89667, 38367, 90445, 85224, 67126, 99714, 72667, 98432, 44502, 36651, 6875, 56709, 33638, 50870, 1288, 76520, 88161, 4020, 63025, 1893, 39578, 66951, 7444, 98509, 4953, 79491, 56494, 48304, 32368, 98262, 8930, 74070, 36407, 82807, 34462, 73028, 75771, 82826, 48383, 20295, 66223, 66462, 84746, 63120, 38917, 26944, 85942, 42471, 48754, 48560, 56376, 54374, 75778, 25814, 33566, 39356, 84187, 94677, 19263, 27100, 54696, 58869, 83881, 99350, 23147, 76066, 59144, 38152, 97943, 78315, 84655, 9938, 68119, 65291, 16982, 40639, 98342, 61994, 85248, 42746, 29559, 80045, 69282, 54504, 51911, 33800, 50643, 37689, 21696, 42109, 52551, 41868, 64707, 57822, 75594, 16414, 30816, 12636, 72464, 51531, 57476, 74284, 4001, 8875, 65117, 56972, 77199, 97466, 10690, 17573, 57333, 31586, 51290, 75690, 45808, 89034, 9256, 43270, 71628, 93535, 29790, 94004, 79816, 69376, 63966, 95104, 55795, 17467, 61147, 18941, 14710, 57836, 87308, 8808, 65197, 27174, 45826, 56398, 6305, 61383, 60090, 48515, 27334, 96863, 31226, 34832, 45046, 9066, 13427, 14053, 65473, 23538, 49908, 44847, 12537, 21280, 69196, 16412, 26638, 68081, 92898, 39266, 9744, 74883, 94113, 39270, 17032, 8891, 52375, 24900, 14050, 74599, 46110, 66684, 87511, 31985, 92971, 56608, 3960, 84340, 92624, 84553, 70290, 82598, 28330, 21392, 95155, 25543, 52668, 19933, 62386, 18349, 35182, 36512, 83590, 14179, 80240, 53259, 8122, 73571, 87040, 80159, 13049, 17135, 46547, 78678, 95990, 30398, 16591, 49107, 65376, 15282, 41628, 96381, 90842, 9481, 11412, 33637, 39144, 82607, 68896, 66547, 21785, 98446, 1515, 74884, 10139, 20926, 55777, 64344, 35074, 68993, 27440, 54061, 59194, 38595, 50440, 99906, 82127, 16649, 76599, 28394, 98560, 39407, 15704, 56649, 42116, 34181, 24115, 18831, 49480, 12289, 57937, 86161, 6102, 35672, 81617, 61433, 6325, 43577, 3325, 32087, 68399, 31401, 16727, 81140, 12862, 60744, 96763, 74112, 25759, 45991, 87505, 90424, 45859, 52031, 43652, 85700, 40471, 35175, 81890, 13785, 99127, 63874, 63325, 14807, 40984, 91184, 28256, 16391, 11531, 17174, 6339, 93537, 63998, 50804, 56738, 94324, 26257, 3920, 71182, 16814, 98874, 37735, 547, 11753, 82575, 15641, 48448, 94036, 80431, 16996, 99851, 56576, 33729, 9919, 74875, 41564, 67833, 54284, 85528, 53444, 23290, 93317, 84493, 19359, 19549, 59045, 33886, 83037, 65946, 15992, 92170, 22749, 19589, 12748, 22513, 30988, 75933, 67282, 20178, 67058, 52342, 79559, 4724, 54681, 26058, 13370, 30681, 91339, 77124, 70287, 31821, 44160, 48350, 35503, 53833, 48011, 98962, 65791, 17549, 5055, 66345, 46650, 99274, 47850, 46526, 77759, 87405, 27543, 60385, 97969, 28427, 16950, 16935, 22220, 7551, 13750, 9968, 89086, 36472, 76468, 86722, 16966, 9294, 29714, 34064, 99596, 70232, 8164, 21486, 9331, 85536, 1744, 1286, 68258, 38142, 12141, 56166, 26235, 15588, 43695, 78905, 90298, 36987, 42454, 86377, 41545, 56684, 92415, 61467, 10472, 33537, 96007, 48183, 4798, 83706, 43907, 96066, 98215, 11382, 94951, 1184, 48481, 60657, 85067, 75972, 30356, 87347, 27794, 57853, 43314, 69806, 36181, 23498, 91954, 32261, 24920, 5394, 79480, 5797, 34103, 71197, 65726, 89496, 41723, 44454, 70887, 60371, 10727, 66922, 42196, 63123, 28213, 76637, 96465, 74670, 89671, 41425, 15023, 69680, 11018, 73347, 75003, 58953, 73635, 58620, 32005, 82961, 15398, 25280, 23027, 28064, 59298, 17053, 15262, 7823, 14743, 91561, 94787, 23779,
		94824, 95942, 49825, 87581, 21827, 44403, 87895, 60518, 83936, 90830, 49720, 33246, 43813, 11362, 66953, 38572, 68118, 28810, 93570, 97907, 40968, 67953, 10271, 22370, 98955, 74026, 94825, 65627, 16799, 10920, 80375, 82490, 75982, 85795, 91949, 57214, 19069, 78844, 35393, 97758, 79502, 45696, 68534, 41621, 67034, 65547, 70748, 10777, 87314, 85746, 74539, 82951, 96852, 65469, 82567, 19330, 54725, 99083, 25637, 66159, 57080, 51212, 61596, 29319, 22005, 42285, 41371, 93867, 99214, 32951, 35712, 88009, 98587, 40115, 93463, 49569, 90464, 16786, 13459, 7710, 91959, 7054, 87574, 58356, 25951, 83482, 94614, 25943, 28336, 49708, 17014, 71664, 98004, 60078, 68533, 74779, 99821, 84516, 90859, 51054, 98944, 99639, 19324, 4712, 21638, 76210, 97047, 36702, 93578, 46283, 86566, 2814, 15067, 63172, 21141, 74491, 21960, 27313, 88, 93973, 651, 12441, 23570, 77127, 27440, 66104, 26233, 36532, 22112, 22980, 78297, 51530, 59568, 59681, 79726, 18839, 20208, 10024, 26932, 95114, 25604, 83412, 29254, 88772, 27293, 45510, 24897, 68201, 75069, 86616, 68396, 83789, 4030, 79583, 99406, 12490, 99112, 60964, 85702, 20937, 83148, 29316, 77148, 19356, 93130, 72445, 78415, 46145, 92772, 3093, 71757, 29582, 57741, 62527, 63934, 3100, 94563, 67310, 30646, 73878, 46870, 36796, 20081, 83051, 48957, 98814, 91127, 4866, 5753, 76579, 12470, 22049, 92580, 89876, 20610, 52346, 16167, 74890, 44245, 114, 3019, 21177, 78955, 34787, 68307, 33603, 19102, 62908, 85383, 62820, 34565, 98492, 28313, 16003, 2921, 40570, 78667, 65336, 78731, 88843, 50842, 83686, 30292, 6724, 69337, 81038, 51135, 47963, 83533, 30208, 47857, 51707, 11489, 38399, 66444, 60492, 6692, 88183, 45248, 17045, 61769, 10729, 81380, 11797, 16944, 91661, 33421, 39530, 45691, 98761, 17572, 3626, 23280, 49589, 67499, 23146, 3308, 55667, 14903, 32447, 53661, 71353, 62864, 14702, 96031, 187, 87048, 93238, 50651, 26866, 29850, 15379, 20664, 24122, 4360, 56867, 17077, 81124, 55297, 30338, 16441, 65479, 37532, 60000, 64715, 69452, 26492, 74563, 23798, 59824, 83259, 19178, 98102, 49980, 27814, 92459, 96171, 9596, 87418, 86621, 26445, 36583, 81537, 86445, 80725, 25254, 67426, 70123, 36583, 56205, 14933, 26129, 54492, 86263, 64751, 94183, 62826, 95683, 39492, 13648, 92303, 76933, 19789, 73606, 61399, 65043, 26666, 15591, 79566, 19036, 84487, 54148, 36006, 78191, 68209, 85729, 13491, 71851, 48749, 19577, 29715, 47385, 61323, 38821, 69367, 9998, 1959, 82865, 97615, 81231, 63813, 46110, 37228, 83056, 40288, 601, 86697, 73934, 10802, 87402, 29266, 52162, 66668, 46299, 71227, 19628, 45523, 84879, 68509, 36526, 79284, 76267, 10806, 33762, 60544, 13709, 25967, 3360, 36119, 77875, 174, 23603, 88892, 62822, 79239, 72823, 85681, 84239, 3941, 80036, 85268, 15752, 54122, 42665, 93924, 76832, 8094, 53691, 36347, 14278, 8742, 69988, 59976, 66631, 34640, 83260, 76566, 83478, 13832, 32496, 69772, 6102, 87151, 59910, 17316, 90372, 71551, 83124, 88155, 70727, 67780, 50795, 19832, 42686, 31591, 60647, 14655, 9419, 20850, 22528, 49934, 56428, 26509, 72674, 90242, 60242, 56708, 28001, 85521, 57653, 59904, 73565, 59147, 28264, 67857, 93947, 38101, 36691, 86103, 4512, 58082, 36307, 25575, 42805, 70272, 25335, 98894, 49378, 441, 9365, 99761, 58291, 67092, 40557, 43111, 36250, 95951, 3696, 2577, 94629, 56578, 33367, 50658, 80987, 50984, 37831, 81038, 5451, 37299, 32056, 30617, 83116, 89170, 65265, 85875, 48358, 44406, 14213, 55039, 97372, 54191, 39284, 81125, 30680, 70092, 14176, 81586, 32122, 18317, 78881, 90740, 34712, 10890, 94965, 83809, 89612, 16977, 49123, 78958, 18358, 28146, 57016, 96143, 66506, 2154, 37796, 37214, 9420, 49496, 12390, 72240, 52515, 49575, 71024, 11312, 62460, 57090, 10648, 43579, 47799, 62498, 6535, 78894, 4601, 12969, 8396, 46427, 93117, 75258, 32596, 1065, 63466, 1447, 96856, 49127, 78616, 5296, 36934, 38382, 94425, 68000, 63443, 59395, 33549, 52305, 39136, 77525, 21530, 38317, 33290, 27370, 2320, 42068, 58998, 54294, 95898, 47574, 3233, 25319, 54311, 70718, 43074, 80734, 4872, 35521, 95989, 68929, 76603, 54976, 20766, 39141, 1249, 79248, 71005, 57916, 734, 59653, 42167, 92856, 95053, 3414, 36532, 98147, 63621, 81619, 37933, 65421, 14516, 46753, 67040, 61119, 6451, 86031, 58932, 47718, 2292, 16761, 96947, 59009, 78045, 34114, 55562, 86060, 41477, 48144, 9310, 91110, 86678, 37462, 63847, 74980, 59314, 29193, 61385, 93475, 97359, 34407, 20873, 42601, 80828, 40668, 71604, 38585, 84574, 14606, 39055, 79217, 54437, 59760, 89077, 27915, 89431, 20171, 41333, 2779, 66391, 44632, 97253, 46093, 71919, 63852, 14715, 7764, 2698, 72690, 2793, 91817, 65685, 11756, 38688, 28701, 97602, 26283, 11368, 62795, 72058, 61996, 24786, 12951, 68971, 21086, 14444, 33004, 82602, 8965, 36526, 45182, 69048, 39233, 14904, 95094, 57379, 46161, 53592, 73487, 52906, 12446, 8619, 42904, 47227, 60646, 58762, 81891, 16148, 4051, 63259, 23105, 15865, 51980, 40942, 98545, 59610, 34895, 86510, 21684, 15651, 45861, 18170, 31863, 93726, 12608, 83096, 59075, 67652, 93327, 58169, 23759, 16586, 23451, 72757, 93615, 80342, 45867, 70621, 45467, 55861, 40472, 45632, 82948, 60605, 16336, 14431, 14545, 50413, 39868, 7564, 79867, 5988, 54120, 67704, 58924, 72078, 49189, 88975, 54579, 87780, 94057, 61000, 44003, 2916, 57095, 91699, 62391, 80253, 84294, 552, 35743, 63748, 71149, 90249, 23149, 87401, 73598, 23730, 16268, 26918}
	fmt.Println(minimumTime3(time, 1687774))

	time = []int{2, 2, 2}
	fmt.Println(minimumTime3(time, 3))
	time = []int{98, 26, 57, 84, 47, 4, 34, 54, 75, 25, 27, 72, 31, 44, 14, 32, 11, 95, 82, 28, 94, 83, 98, 45, 34, 12, 62, 37, 96, 29, 61, 46, 43, 96, 81, 8, 97, 96, 40, 81}
	fmt.Println(minimumTime3(time, 5189))

	time = []int{2, 1}
	fmt.Println(minimumTime3(time, 4))
	time = []int{35, 26, 65, 87}
	fmt.Println(minimumTime3(time, 3865))
	time = []int{87, 85, 87, 12, 42, 44, 91, 7, 36, 58, 64, 33, 51, 73, 27, 100, 30, 80, 9, 22, 95, 58, 97, 6, 6, 96, 10, 59, 68, 24, 14, 79, 33, 66, 59, 98, 2, 61, 100, 70, 93, 17, 18, 5, 5, 100, 33, 64, 8, 18, 92, 40, 36, 87, 100, 29, 21, 15, 27, 3, 12, 70, 18, 7, 14, 74, 80, 99, 67, 8, 94, 61}
	fmt.Println(minimumTime3(time, 2847))

	time = []int{5, 10, 10}
	fmt.Println(minimumTime3(time, 9))

	//fmt.Println(minElem(time))
	//fmt.Println(ColTrips(time, maxElem(time)))
	*/
	fmt.Println("step -> ", step)
}
